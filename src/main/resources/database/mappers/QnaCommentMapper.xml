<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.ware.group.qna.QnaCommentDAO">
	
	<sql id="commentCondition">
		<trim prefix="where" suffixOverrides="and">
			qna_id = #{qnaId} AND
			<if test="kind == 'contents'">
				CONTENTS LIKE CONCAT('%', #{search},'%')
			</if>
			<if test="kind == 'writer'">
				WRITER LIKE CONCAT('%', #{search}, '%')
			</if>		
		</trim> 
	</sql>
	
	
	<select id="getTotalCount" resultType="Long" parameterType="Pager">
		SELECT COUNT(ID) FROM QNACOMMENT
		<include refid="commentCondition"></include>
	</select>
	
	<select id="getQnaCommentList" resultType="QnaCommentVO" parameterType="Pager">
		SELECT * FROM (
			    SELECT *, ROW_NUMBER() OVER (ORDER BY ID ASC) AS R FROM (
			        SELECT * FROM QNACOMMENT
			        <include refid="commentCondition"></include>
			   	 ) AS C
				) AS D
		WHERE R BETWEEN #{startRow} AND #{perPage}
	
	</select>
	
	
	
	<insert id="setQnaCommentAdd" parameterType="QnaCommentVO" useGeneratedKeys="true" keyProperty="id">
  			<selectKey keyProperty="id" resultType="Long" order="BEFORE">
  				SELECT MAX(id)+1 FROM QNACOMMENT
  			</selectKey>
  			INSERT INTO QNACOMMENT (id, qna_id, contents, reg_date, writer,ref,step,depth)
  			VALUES ( #{id} , #{qnaId}, #{contents}, now(), #{writer},#{id},0,0)
  		</insert>
	
	<delete id="setQnaCommentDelete" parameterType="QnaCommentVO">
  			DELETE QNACOMMENT WHERE ID = #{id}
  	</delete>
  	
  	<update id="setQnaCommentUpdate" parameterType="QnaCommentVO">
  			UPDATE QNACOMMENT SET CONTENTS = #{contents}
  			WHERE ID = #{id}
  	</update>
  	
</mapper>